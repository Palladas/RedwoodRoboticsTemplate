16
{"last_modification_time":1633919104,"language":2,"import_file":"c:/users/prana/documents/redwoodroboticstemplate/src/main.cpp","args_hash":15207834388531400596,"includes":[{"line":21,"resolved_path":"c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cstdint"},{"line":23,"resolved_path":"c:/users/prana/documents/redwoodroboticstemplate/include/pros/motors.h"}],"dependencies":["c:/users/prana/documents/redwoodroboticstemplate/src/main.cpp","c:/users/prana/documents/redwoodroboticstemplate/include/main.h","c:/users/prana/documents/redwoodroboticstemplate/include/api.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cerrno","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/c++config.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/errno.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/errno.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/reent.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/_ansi.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/newlib.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/config.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/features.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/_types.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/machine/_types.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/machine/_default_types.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/lock.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cmath","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/cpp_type_traits.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ext/type_traits.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/math.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/cdefs.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/std_abs.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/stdlib.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/alloca.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/specfun.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_algobase.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/functexcept.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ext/numeric_traits.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_pair.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/move.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/type_traits","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_iterator_base_types.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_iterator_base_funcs.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/concept_check.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_iterator.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/ptr_traits.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/debug/debug.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/limits","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/gamma.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/bessel_function.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/exp_integral.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/legendre_function.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/modified_bessel_func.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/riemann_zeta.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cstdbool","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cstddef","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cstdint","c:/users/prana/appdata/local/programs/pros/toolchain/usr/lib/gcc/arm-none-eabi/10.2.1/include/stdint.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/stdint.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/_intsup.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/_stdint.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cstdio","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/stdio.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/types.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/machine/endian.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/select.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/_timeval.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/timespec.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/_timespec.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/_pthreadtypes.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/sched.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/stdio.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cstdlib","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/iostream","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ostream","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ios","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/iosfwd","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stringfwd.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/memoryfwd.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/postypes.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cwchar","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/wchar.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/_locale.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/exception","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/exception.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/exception_ptr.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/cxxabi_init_exception.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/typeinfo","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/hash_bytes.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/new","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/nested_exception.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/char_traits.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/localefwd.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/c++locale.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/clocale","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/locale.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cctype","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/ctype.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/ios_base.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ext/atomicity.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/gthr.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/locale_classes.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/string","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/allocator.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/c++allocator.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/ostream_insert.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_function.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/range_access.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/initializer_list","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/iterator_concepts.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/basic_string.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ext/alloc_traits.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_construct.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/string_view","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/functional_hash.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ext/string_conversions.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/charconv.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/basic_string.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/system_error","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/error_constants.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/stdexcept","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/streambuf","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/basic_ios.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/locale_facets.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/cwctype","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/wctype.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/streambuf_iterator.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/ostream.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/istream","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/istream.tcc","c:/users/prana/documents/redwoodroboticstemplate/include/pros/adi.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/distance.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/ext_adi.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/gps.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/imu.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/llemu.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lvgl.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_log.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_conf.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_task.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_mem.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_ll.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_hal/lv_hal.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_hal/lv_hal_disp.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_color.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_area.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/string.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/strings.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_hal/lv_hal_indev.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_core/lv_obj.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_core/lv_style.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_font.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_symbol_def.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_fonts/lv_font_builtin.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_anim.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_hal/lv_hal_tick.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_core/lv_group.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_core/lv_lang.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_core/lv_vdb.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_core/lv_refr.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_themes/lv_theme.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_themes/lv_theme_templ.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_themes/lv_theme_default.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_themes/lv_theme_alien.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_themes/lv_theme_night.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_themes/lv_theme_zen.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_themes/lv_theme_mono.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_themes/lv_theme_nemo.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_themes/lv_theme_material.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_btn.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_cont.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_core/lv_indev.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_imgbtn.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_draw/lv_draw_img.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_draw/lv_draw.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_txt.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_draw/lv_draw_rect.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_draw/lv_draw_label.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_draw/lv_draw_triangle.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_img.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_misc/lv_fs.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_label.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_line.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_page.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_list.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_chart.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_table.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_cb.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_bar.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_slider.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_led.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_btnm.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_kb.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_ddlist.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_roller.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_ta.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_canvas.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_win.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_tabview.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_tileview.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_mbox.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_gauge.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_lmeter.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_sw.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_arc.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_preload.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_calendar.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_objx/lv_spinbox.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/misc.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/motors.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/optical.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/rtos.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/rotation.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/screen.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/vision.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/adi.hpp","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tuple","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/utility","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/array","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/uses_allocator.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/invoke.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/distance.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/pros/gps.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/pros/imu.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/pros/llemu.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/pros/misc.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/pros/optical.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/pros/rotation.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/pros/rtos.hpp","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/functional","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/refwrap.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/std_function.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/unordered_map","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ext/aligned_buffer.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/hashtable.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/hashtable_policy.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/node_handle.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/optional","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/vector","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_uninitialized.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_bvector.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_algo.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/algorithmfwd.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_heap.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_tempbuf.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/uniform_int_dist.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/memory","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ext/concurrence.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/unique_ptr.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/shared_ptr.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/shared_ptr_base.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/allocated_ptr.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/shared_ptr_atomic.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/atomic_base.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/backward/auto_ptr.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/pstl/glue_memory_defs.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/pstl/execution_defs.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/screen.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/pros/vision.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/controller/chassiscontrollerintegrated.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/controller/chassiscontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/controller/chassisscales.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qangle.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/rquantity.hpp","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ratio","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qlength.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/util/logging.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/coreprosapi.hpp","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/sstream","c:/users/prana/documents/redwoodroboticstemplate/include/pros/apix.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/serial.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/serial.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/util/abstracttimer.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qfrequency.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qtime.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/util/mathutil.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/device/motor/abstractmotor.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/device/rotarysensor/continuousrotarysensor.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/device/rotarysensor/rotarysensor.hpp","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/algorithm","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/pstl/glue_algorithm_defs.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/math.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/mutex","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/chrono","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/ctime","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/time.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/parse_numbers.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/std_mutex.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/unique_lock.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/util/timer.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/model/chassismodel.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/model/readonlychassismodel.hpp","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/valarray","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/valarray_array.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/valarray_before.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/async/asyncposintegratedcontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/async/asyncpositioncontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/async/asynccontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/closedloopcontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/util/timeutil.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/util/settledutil.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/util/abstractrate.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/util/supplier.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/controller/chassiscontrollerpid.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/iterative/iterativepospidcontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/iterative/iterativepositioncontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/iterative/iterativecontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/filter/passthroughfilter.hpp","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/atomic","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/controller/defaultodomchassiscontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/controller/odomchassiscontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/model/skidsteermodel.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/odometry/odometry.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/odometry/odomstate.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/odometry/point.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qspeed.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/model/hdrivemodel.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/model/threeencoderskidsteermodel.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/model/threeencoderxdrivemodel.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/chassis/model/xdrivemodel.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/chassis/controller/chassiscontrollerbuilder.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/motor/motor.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/motor/motorgroup.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/rotarysensor/adiencoder.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/rotarysensor/integratedencoder.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/rotarysensor/rotationsensor.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/util/timeutilfactory.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/async/asynclinearmotionprofilecontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/util/pathfinderutil.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qangularspeed.hpp","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/map","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_tree.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_map.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_multimap.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/mathutil.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/structs.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/fit.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/spline.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/trajectory.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/modifiers/tank.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/modifiers/swerve.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/followers/encoder.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/followers/distance.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/io.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/stdlib.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/async/asyncmotionprofilecontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/async/asyncpospidcontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/async/asyncwrapper.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/offsettablecontrollerinput.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/async/asyncvelintegratedcontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/async/asyncvelocitycontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/async/asyncvelpidcontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/iterative/iterativevelpidcontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/iterative/iterativevelocitycontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/filter/velmath.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/filter/composablefilter.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qangularacceleration.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/iterative/iterativemotorvelocitycontroller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/util/controllerrunner.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/util/flywheelsimulator.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/util/pidtuner.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/control/async/asyncmotionprofilecontrollerbuilder.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/control/async/asyncposcontrollerbuilder.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/control/async/asyncvelcontrollerbuilder.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/control/iterative/iterativecontrollerfactory.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/filter/velmathfactory.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/control/util/controllerrunnerfactory.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/control/util/pidtunerfactory.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/odometry/odommath.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/odometry/threeencoderodometry.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/odometry/twoencoderodometry.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/adiultrasonic.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/button/adibutton.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/device/button/buttonbase.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/device/button/abstractbutton.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/button/controllerbutton.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/controllerutil.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/controller.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/distancesensor.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/motor/adimotor.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/opticalsensor.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/rotarysensor/imu.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/rotarysensor/adigyro.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/device/rotarysensor/potentiometer.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/filter/averagefilter.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/filter/demafilter.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/filter/ekffilter.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/filter/emafilter.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/filter/filteredcontrollerinput.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/filter/medianfilter.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qacceleration.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qangularjerk.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qarea.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qforce.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qmass.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qjerk.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qpressure.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qtorque.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/units/qvolume.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/impl/util/rate.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/autonomous.h","c:/users/prana/documents/redwoodroboticstemplate/include/functions.h","c:/users/prana/documents/redwoodroboticstemplate/include/motorsetup.h","c:/users/prana/documents/redwoodroboticstemplate/include/pid.h","c:/users/prana/documents/redwoodroboticstemplate/include/drivetrain.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/lib/gcc/arm-none-eabi/10.2.1/include/stddef.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/predefined_ops.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/special_function_util.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/beta_function.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/ell_integral.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/hypergeometric.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/poly_hermite.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/tr1/poly_laguerre.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/lib/gcc/arm-none-eabi/10.2.1/include/stdarg.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/sys/_sigset.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/gthr-default.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/atomic_word.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/cxxabi_forced.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/backward/binders.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/string_view.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/locale_classes.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/streambuf.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/ctype_base.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/ctype_inline.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/locale_facets.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/basic_ios.tcc","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_draw/lv_draw_line.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_relops.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/enable_special_members.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/unordered_map.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/erase_if.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/vector.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/stl_raw_storage_iter.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/sstream.tcc","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/controlleroutput.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/control/controllerinput.hpp","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/valarray_array.tcc","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/slice_array.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/valarray_after.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/gslice.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/gslice_array.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/mask_array.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/indirect_array.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/filter/filter.hpp","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/api/odometry/statemode.hpp","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/os_defines.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/cpu_defines.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/pstl/pstl_config.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/_newlib_version.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/machine/ieeefp.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/machine/stdlib.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/exception_defines.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/debug/assertions.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/lib/gcc/arm-none-eabi/10.2.1/include/stdbool.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/machine/_endian.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/machine/types.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/concepts","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/range_cmp.h","c:/users/prana/documents/redwoodroboticstemplate/include/pros/colors.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_version.h","c:/users/prana/documents/redwoodroboticstemplate/include/display/lv_conf_checker.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/ranges_uninitialized.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/c++/10.2.1/bits/atomic_lockfree_defines.h","c:/users/prana/appdata/local/programs/pros/toolchain/usr/arm-none-eabi/include/machine/time.h","c:/users/prana/documents/redwoodroboticstemplate/include/okapi/pathfinder/include/pathfinder/lib.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":15333955921748837064,"detailed_name":"pros","short_name_offset":0,"short_name_size":4,"kind":3,"hover":"","comments":"","declarations":[],"spell":"26:11-26:15|-1|1|2","extent":"26:1-841:2|-1|1|0","bases":[1],"derived":[12],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["26:11-26:15|-1|1|4","838:7-838:11|12|2|4","839:7-839:11|12|2|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":13223131572302575246,"detailed_name":"pros::Motor","short_name_offset":6,"short_name_size":5,"kind":5,"hover":"","comments":"","declarations":["46:11-46:16|-1|1|4","49:11-49:16|-1|1|4","51:11-51:16|-1|1|4","53:11-53:16|-1|1|4","55:11-55:16|-1|1|4"],"spell":"27:7-27:12|0|2|2","extent":"27:1-835:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"vars":[0],"instances":[],"uses":["46:11-46:16|2|2|4","49:11-49:16|2|2|4","51:11-51:16|2|2|4","53:11-53:16|2|2|4","55:11-55:16|2|2|4","838:13-838:18|-1|1|4","839:13-839:18|-1|1|4"]},{"id":3,"usr":5401847601697785946,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["46:23-46:26|2|2|4","49:23-49:26|2|2|4","51:23-51:26|2|2|4","53:23-53:26|2|2|4","55:23-55:26|2|2|4","79:10-79:13|2|2|4","79:33-79:36|2|2|4","98:10-98:13|2|2|4","98:28-98:31|2|2|4","122:10-122:13|2|2|4","122:66-122:69|2|2|4","147:10-147:13|2|2|4","147:66-147:69|2|2|4","169:10-169:13|2|2|4","169:43-169:46|2|2|4","186:10-186:13|2|2|4","186:42-186:45|2|2|4","204:10-204:13|2|2|4","204:54-204:57|2|2|4","228:10-228:13|2|2|4","258:10-258:13|2|2|4","270:10-270:13|2|2|4","299:10-299:13|2|2|4","315:10-315:13|2|2|4","332:10-332:13|2|2|4","348:10-348:13|2|2|4","364:10-364:13|2|2|4","381:10-381:13|2|2|4","381:40-381:43|2|2|4","393:10-393:13|2|2|4","453:10-453:13|2|2|4","477:10-477:13|2|2|4","489:10-489:13|2|2|4","504:10-504:13|2|2|4","519:10-519:13|2|2|4","519:47-519:50|2|2|4","534:10-534:13|2|2|4","549:10-549:13|2|2|4","621:10-621:13|2|2|4","640:10-640:13|2|2|4","660:10-660:13|2|2|4","679:10-679:13|2|2|4","696:10-696:13|2|2|4","711:10-711:13|2|2|4","711:47-711:50|2|2|4","737:10-737:13|2|2|4","809:10-809:13|2|2|4","824:10-824:13|2|2|4","831:10-831:13|2|2|4","834:8-834:11|2|2|4"]},{"id":4,"usr":12339929197612516034,"detailed_name":"uint8_t","short_name_offset":0,"short_name_size":7,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0],"uses":["46:28-46:35|-1|1|4","49:28-49:35|-1|1|4","51:28-51:35|-1|1|4","53:28-53:35|-1|1|4","55:28-55:35|-1|1|4","831:15-831:22|-1|1|4","834:13-834:20|-1|1|4"]},{"id":5,"usr":2717559019024375614,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["46:48-46:65|-1|1|4","49:48-49:65|-1|1|4","51:48-51:65|-1|1|4","549:41-549:58|-1|1|4","761:10-761:27|-1|1|4"]},{"id":6,"usr":5308202893659224307,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["47:23-47:46|-1|1|4","534:47-534:70|-1|1|4","749:10-749:33|-1|1|4"]},{"id":7,"usr":11353837028888530222,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["79:15-79:22|-1|1|4","79:38-79:45|-1|1|4","98:15-98:22|-1|1|4","98:33-98:40|-1|1|4","122:15-122:22|-1|1|4","122:71-122:78|-1|1|4","147:15-147:22|-1|1|4","147:71-147:78|-1|1|4","169:15-169:22|-1|1|4","169:48-169:55|-1|1|4","186:15-186:22|-1|1|4","186:47-186:54|-1|1|4","204:15-204:22|-1|1|4","204:59-204:66|-1|1|4","228:15-228:22|-1|1|4","258:15-258:22|-1|1|4","270:15-270:22|-1|1|4","299:15-299:22|-1|1|4","315:15-315:22|-1|1|4","332:15-332:22|-1|1|4","381:15-381:22|-1|1|4","393:15-393:22|-1|1|4","453:15-453:22|-1|1|4","477:15-477:22|-1|1|4","489:15-489:22|-1|1|4","504:15-504:22|-1|1|4","519:15-519:22|-1|1|4","519:52-519:59|-1|1|4","534:15-534:22|-1|1|4","549:15-549:22|-1|1|4","621:15-621:22|-1|1|4","640:15-640:22|-1|1|4","660:15-660:22|-1|1|4","679:15-679:22|-1|1|4","696:15-696:22|-1|1|4","711:15-711:22|-1|1|4","711:52-711:59|-1|1|4","737:15-737:22|-1|1|4","809:15-809:22|-1|1|4","824:15-824:22|-1|1|4"]},{"id":8,"usr":16199156163178427820,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["348:15-348:23|-1|1|4","364:15-364:23|-1|1|4","381:45-381:53|-1|1|4"]},{"id":9,"usr":15475990595053285185,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["504:44-504:64|-1|1|4","723:10-723:30|-1|1|4"]},{"id":10,"usr":10915920593225744659,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["570:9-570:22|-1|1|4","621:41-621:54|-1|1|4","660:41-660:54|-1|1|4"]},{"id":11,"usr":657458469826123996,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["600:9-600:27|-1|1|4","640:46-640:64|-1|1|4","679:46-679:64|-1|1|4","779:10-779:28|-1|1|4","797:10-797:28|-1|1|4"]},{"id":12,"usr":7234153455369566807,"detailed_name":"pros::literals","short_name_offset":6,"short_name_size":8,"kind":3,"hover":"","comments":"","declarations":[],"spell":"837:11-837:19|0|2|2","extent":"837:1-840:2|0|2|0","bases":[0],"derived":[],"types":[],"funcs":[53,54],"vars":[],"instances":[],"uses":["837:11-837:19|0|2|4"]}],"funcs":[{"id":0,"usr":6870979704848046819,"detailed_name":"void pros::Motor::Motor(const std::uint8_t port, const pros::motor_gearset_e_t gearset, const bool reverse, const pros::motor_encoder_units_e_t encoder_units)","short_name_offset":11,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"\nCreates a Motor object for the given port and specifications.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as a motor\n\n\\param port\n       The V5 port number from 1-21\n\\param gearset\n       The motor's gearset\n\\param reverse\n       True reverses the motor, false is default\n\\param encoder_units\n       The motor's encoder units","declarations":[{"spell":"46:11-46:16|2|2|1","param_spellings":["46:36-46:40","46:66-46:73","46:86-46:93","47:47-47:60"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":6867654019593633037,"detailed_name":"void pros::Motor::Motor(const std::uint8_t port, const pros::motor_gearset_e_t gearset, const bool reverse)","short_name_offset":11,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"49:11-49:16|2|2|1","param_spellings":["49:36-49:40","49:66-49:73","49:86-49:93"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":9758229572568467511,"detailed_name":"void pros::Motor::Motor(const std::uint8_t port, const pros::motor_gearset_e_t gearset)","short_name_offset":11,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"51:11-51:16|2|2|1","param_spellings":["51:36-51:40","51:66-51:73"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":2935798749177007771,"detailed_name":"void pros::Motor::Motor(const std::uint8_t port, const bool reverse)","short_name_offset":11,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"53:11-53:16|2|2|1","param_spellings":["53:36-53:40","53:53-53:60"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":5655638687832601466,"detailed_name":"void pros::Motor::Motor(const std::uint8_t port)","short_name_offset":11,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"55:11-55:16|2|2|1","param_spellings":["55:36-55:40"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":18034929478401598576,"detailed_name":"std::int32_t pros::Motor::operator=(std::int32_t voltage) const","short_name_offset":26,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\nMotor movement functions                       **/\n\nThese functions allow programmers to make motors move         **/\n\n\nSets the voltage for the motor from -128 to 127.\n\nThis is designed to map easily to the input from the controller's analog\nstick for simple opcontrol use. The actual behavior of the motor is\nanalogous to use of pros::Motor::move(), or motorSet from the PROS 2 API.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param voltage\nThe new motor voltage from -127 to 127\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"79:23-79:32|2|2|1","param_spellings":["79:46-79:53"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":1927762309395200506,"detailed_name":"std::int32_t pros::Motor::move(std::int32_t voltage) const","short_name_offset":26,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\nSets the voltage for the motor from -127 to 127.\n\nThis is designed to map easily to the input from the controller's analog\nstick for simple opcontrol use. The actual behavior of the motor is\nanalogous to use of motor_move(), or motorSet() from the PROS 2 API.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param voltage\n       The new motor voltage from -127 to 127\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"98:23-98:27|2|2|1","param_spellings":["98:41-98:48"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":15119448766468304285,"detailed_name":"std::int32_t pros::Motor::move_absolute(const double position, const std::int32_t velocity) const","short_name_offset":26,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nSets the target absolute position for the motor to move to.\n\nThis movement is relative to the position of the motor when initialized or\nthe position when it was most recently reset with\npros::Motor::set_zero_position().\n\n\\note This function simply sets the target for the motor, it does not block\nprogram execution until the movement finishes.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param position\n       The absolute position to move to in the motor's encoder units\n\\param velocity\n       The maximum allowable velocity for the movement in RPM\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"122:23-122:36|2|2|1","param_spellings":["122:50-122:58","122:79-122:87"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":3946123844596406214,"detailed_name":"std::int32_t pros::Motor::move_relative(const double position, const std::int32_t velocity) const","short_name_offset":26,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nSets the relative target position for the motor to move to.\n\nThis movement is relative to the current position of the motor as given in\npros::Motor::motor_get_position(). Providing 10.0 as the position parameter\nwould result in the motor moving clockwise 10 units, no matter what the\ncurrent position is.\n\n\\note This function simply sets the target for the motor, it does not block\nprogram execution until the movement finishes.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param position\n       The relative position to move to in the motor's encoder units\n\\param velocity\n       The maximum allowable velocity for the movement in RPM\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"147:23-147:36|2|2|1","param_spellings":["147:50-147:58","147:79-147:87"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":4945245565749683611,"detailed_name":"std::int32_t pros::Motor::move_velocity(const std::int32_t velocity) const","short_name_offset":26,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nSets the velocity for the motor.\n\nThis velocity corresponds to different actual speeds depending on the\ngearset used for the motor. This results in a range of +-100 for\nE_MOTOR_GEARSET_36, +-200 for E_MOTOR_GEARSET_18, and +-600 for\nE_MOTOR_GEARSET_6. The velocity is held with PID to ensure consistent\nspeed, as opposed to setting the motor's voltage.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param velocity\n       The new motor velocity from -+-100, +-200, or +-600 depending on the\n       motor's gearset\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"169:23-169:36|2|2|1","param_spellings":["169:56-169:64"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":5751961181067884152,"detailed_name":"std::int32_t pros::Motor::move_voltage(const std::int32_t voltage) const","short_name_offset":26,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\nSets the output voltage for the motor from -12000 to 12000 in millivolts.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param port\n       The V5 port number from 1-21\n\\param voltage\n       The new voltage value from -12000 to 12000\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"186:23-186:35|2|2|1","param_spellings":["186:55-186:62"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":12269576063990351376,"detailed_name":"std::int32_t pros::Motor::modify_profiled_velocity(const std::int32_t velocity) const","short_name_offset":26,"short_name_size":24,"kind":6,"storage":1,"hover":"","comments":"\nChanges the output velocity for a profiled movement (motor_move_absolute()\nor motor_move_relative()). This will have no effect if the motor is not\nfollowing a profiled movement.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param velocity\n       The new motor velocity from +-100, +-200, or +-600 depending on the\n       motor's gearset\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"204:23-204:47|2|2|1","param_spellings":["204:67-204:75"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":13571812596752595196,"detailed_name":"double pros::Motor::get_target_position() const","short_name_offset":20,"short_name_size":19,"kind":6,"storage":1,"hover":"","comments":"\nGets the target position set for the motor by the user.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The target position in its encoder units or PROS_ERR_F if the\noperation failed, setting errno.","declarations":[{"spell":"216:17-216:36|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":1508942720036197088,"detailed_name":"std::int32_t pros::Motor::get_target_velocity() const","short_name_offset":26,"short_name_size":19,"kind":6,"storage":1,"hover":"","comments":"\nGets the velocity commanded to the motor by the user.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The commanded motor velocity from +-100, +-200, or +-600, or\nPROS_ERR if the operation failed, setting errno.","declarations":[{"spell":"228:23-228:42|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":3591043111485072427,"detailed_name":"double pros::Motor::get_actual_velocity() const","short_name_offset":20,"short_name_size":19,"kind":6,"storage":1,"hover":"","comments":"\nGets the actual velocity of the motor.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The motor's actual velocity in RPM or PROS_ERR_F if the operation\nfailed, setting errno.","declarations":[{"spell":"246:17-246:36|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":303500076882510641,"detailed_name":"std::int32_t pros::Motor::get_current_draw() const","short_name_offset":26,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"\nGets the current drawn by the motor in mA.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The motor's current in mA or PROS_ERR if the operation failed,\nsetting errno.","declarations":[{"spell":"258:23-258:39|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":13757527297050856035,"detailed_name":"std::int32_t pros::Motor::get_direction() const","short_name_offset":26,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nGets the direction of movement for the motor.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return 1 for moving in the positive direction, -1 for moving in the\nnegative direction, and PROS_ERR if the operation failed, setting errno.","declarations":[{"spell":"270:23-270:36|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":8793085888192232757,"detailed_name":"double pros::Motor::get_efficiency() const","short_name_offset":20,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\nGets the efficiency of the motor in percent.\n\nAn efficiency of 100% means that the motor is moving electrically while\ndrawing no electrical power, and an efficiency of 0% means that the motor\nis drawing power but not moving.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The motor's efficiency in percent or PROS_ERR_F if the operation\nfailed, setting errno.","declarations":[{"spell":"286:17-286:31|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":15868211658821645203,"detailed_name":"std::int32_t pros::Motor::is_over_current() const","short_name_offset":26,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"\nChecks if the motor is drawing over its current limit.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return 1 if the motor's current limit is being exceeded and 0 if the\ncurrent limit is not exceeded, or PROS_ERR if the operation failed, setting\nerrno.","declarations":[{"spell":"299:23-299:38|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":8200309071104411123,"detailed_name":"std::int32_t pros::Motor::is_stopped() const","short_name_offset":26,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\nChecks if the motor is stopped.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\note Although this function forwards data from the motor, the motor\npresently does not provide any value. This function returns PROS_ERR with\nerrno set to ENOSYS.\n\n\\return 1 if the motor is not moving, 0 if the motor is moving, or PROS_ERR\nif the operation failed, setting errno","declarations":[{"spell":"315:23-315:33|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":2121845569961436448,"detailed_name":"std::int32_t pros::Motor::get_zero_position_flag() const","short_name_offset":26,"short_name_size":22,"kind":6,"storage":1,"hover":"","comments":"\nChecks if the motor is at its zero position.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\note Although this function forwards data from the motor, the motor\npresently does not provide any value. This function returns PROS_ERR with\nerrno set to ENOSYS.\n\n\\return 1 if the motor is at zero absolute position, 0 if the motor has\nmoved from its absolute zero, or PROS_ERR if the operation failed, setting\nerrno","declarations":[{"spell":"332:23-332:45|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":16144200548970486392,"detailed_name":"std::uint32_t pros::Motor::get_faults() const","short_name_offset":27,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\nGets the faults experienced by the motor.\n\nCompare this bitfield to the bitmasks in pros::motor_fault_e_t.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param port\n       The V5 port number from 1-21\n\n\\return A bitfield containing the motor's faults.","declarations":[{"spell":"348:24-348:34|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":22,"usr":13860223933475181473,"detailed_name":"std::uint32_t pros::Motor::get_flags() const","short_name_offset":27,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\nGets the flags set by the motor's operation.\n\nCompare this bitfield to the bitmasks in pros::motor_flag_e_t.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param port\n       The V5 port number from 1-21\n\n\\return A bitfield containing the motor's flags.","declarations":[{"spell":"364:24-364:33|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":14739765621827017569,"detailed_name":"std::int32_t pros::Motor::get_raw_position(std::uint32_t *const timestamp) const","short_name_offset":26,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"\nGets the raw encoder count of the motor at a given timestamp.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param[in] timestamp\n           A pointer to a time in milliseconds for which the encoder count\n           will be returned. If NULL, the timestamp at which the encoder\n           count was read will not be supplied\n\n\\return The raw encoder count at the given timestamp or PROS_ERR if the\noperation failed.","declarations":[{"spell":"381:23-381:39|2|2|1","param_spellings":["381:61-381:70"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":24,"usr":6042363835633285106,"detailed_name":"std::int32_t pros::Motor::is_over_temp() const","short_name_offset":26,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\nGets the temperature limit flag for the motor.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return 1 if the temperature limit is exceeded and 0 if the temperature is\nbelow the limit, or PROS_ERR if the operation failed, setting errno.","declarations":[{"spell":"393:23-393:35|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":25,"usr":9695991789832007473,"detailed_name":"double pros::Motor::get_position() const","short_name_offset":20,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\nGets the absolute position of the motor in its encoder units.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The motor's absolute position in its encoder units or PROS_ERR_F\nif the operation failed, setting errno.","declarations":[{"spell":"405:17-405:29|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":26,"usr":11367700024921009786,"detailed_name":"double pros::Motor::get_power() const","short_name_offset":20,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\nGets the power drawn by the motor in Watts.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The motor's power draw in Watts or PROS_ERR_F if the operation\nfailed, setting errno.","declarations":[{"spell":"417:17-417:26|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":27,"usr":16402843315467654360,"detailed_name":"double pros::Motor::get_temperature() const","short_name_offset":20,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"\nGets the temperature of the motor in degrees Celsius.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The motor's temperature in degrees Celsius or PROS_ERR_F if the\noperation failed, setting errno.","declarations":[{"spell":"429:17-429:32|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":28,"usr":14408213136614287695,"detailed_name":"double pros::Motor::get_torque() const","short_name_offset":20,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\nGets the torque generated by the motor in Newton Meters (Nm).\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The motor's torque in Nm or PROS_ERR_F if the operation failed,\nsetting errno.","declarations":[{"spell":"441:17-441:27|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":29,"usr":3574679189715136879,"detailed_name":"std::int32_t pros::Motor::get_voltage() const","short_name_offset":26,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nGets the voltage delivered to the motor in millivolts.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The motor's voltage in mV or PROS_ERR_F if the operation failed,\nsetting errno.","declarations":[{"spell":"453:23-453:34|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":30,"usr":12460509416611004641,"detailed_name":"std::int32_t pros::Motor::set_zero_position(const double position) const","short_name_offset":26,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\nSets the position for the motor in its encoder units.\n\nThis will be the future reference point for the motor's \"absolute\"\nposition.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param position\n       The new reference position in its encoder units\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"477:23-477:40|2|2|1","param_spellings":["477:54-477:62"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":31,"usr":3250111145617686679,"detailed_name":"std::int32_t pros::Motor::tare_position() const","short_name_offset":26,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nSets the \"absolute\" zero position of the motor to its current position.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"489:23-489:36|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":32,"usr":157011587634511426,"detailed_name":"std::int32_t pros::Motor::set_brake_mode(const pros::motor_brake_mode_e_t mode) const","short_name_offset":26,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\nSets one of motor_brake_mode_e_t to the motor.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param mode\n       The motor_brake_mode_e_t to set for the motor\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"504:23-504:37|2|2|1","param_spellings":["504:65-504:69"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":33,"usr":7059377084926171922,"detailed_name":"std::int32_t pros::Motor::set_current_limit(const std::int32_t limit) const","short_name_offset":26,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\nSets the current limit for the motor in mA.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param limit\n       The new current limit in mA\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"519:23-519:40|2|2|1","param_spellings":["519:60-519:65"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":34,"usr":4173637090308817267,"detailed_name":"std::int32_t pros::Motor::set_encoder_units(const pros::motor_encoder_units_e_t units) const","short_name_offset":26,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\nSets one of motor_encoder_units_e_t for the motor encoder.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param units\n       The new motor encoder units\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"534:23-534:40|2|2|1","param_spellings":["534:71-534:76"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":35,"usr":9683050092471565106,"detailed_name":"std::int32_t pros::Motor::set_gearing(const pros::motor_gearset_e_t gearset) const","short_name_offset":26,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nSets one of motor_gearset_e_t for the motor.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param gearset\n       The new motor gearset\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"549:23-549:34|2|2|1","param_spellings":["549:59-549:66"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":36,"usr":12976370399809532303,"detailed_name":"pros::motor_pid_s_t pros::Motor::convert_pid(double kf, double kp, double ki, double kd)","short_name_offset":33,"short_name_size":11,"kind":254,"storage":3,"hover":"","comments":"\nTakes in floating point values and returns a properly formatted pid struct.\nThe motor_pid_s_t struct is in 4.4 format, i.e. 0x20 is 2.0, 0x21 is\n2.0625, etc.\nThis function will convert the floating point values to the nearest 4.4\nvalue.\n\n\\param kf\n       The feedforward constant\n\\param kp\n       The proportional constant\n\\param ki\n       The integral constant\n\\param kd\n       The derivative constant\n\n\\return A motor_pid_s_t struct formatted properly in 4.4.","declarations":[{"spell":"570:23-570:34|2|2|1","param_spellings":["570:42-570:44","570:53-570:55","570:64-570:66","570:75-570:77"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":37,"usr":13188667337693675998,"detailed_name":"pros::motor_pid_full_s_t pros::Motor::convert_pid_full(double kf, double kp, double ki, double kd, double filter, double limit, double threshold, double loopspeed)","short_name_offset":38,"short_name_size":16,"kind":254,"storage":3,"hover":"","comments":"\nTakes in floating point values and returns a properly formatted pid struct.\nThe motor_pid_s_t struct is in 4.4 format, i.e. 0x20 is 2.0, 0x21 is\n2.0625, etc.\nThis function will convert the floating point values to the nearest 4.4\nvalue.\n\n\\param kf\n       The feedforward constant\n\\param kp\n       The proportional constant\n\\param ki\n       The integral constant\n\\param kd\n       The derivative constant\n\\param filter\n       A constant used for filtering the profile acceleration\n\\param limit\n       The integral limit\n\\param threshold\n       The threshold for determining if a position movement has reached its\n       goal. This has no effect for velocity PID calculations.\n\\param loopspeed\n       The rate at which the PID computation is run in ms\n\n\\return A motor_pid_s_t struct formatted properly in 4.4.","declarations":[{"spell":"600:28-600:44|2|2|1","param_spellings":["600:52-600:54","600:63-600:65","600:74-600:76","600:85-600:87","600:96-600:102","600:111-600:116","600:125-600:134","601:26-601:35"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":38,"usr":18160524438172253450,"detailed_name":"std::int32_t pros::Motor::set_pos_pid(const pros::motor_pid_s_t pid) const","short_name_offset":26,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nSets one of motor_pid_s_t for the motor. This intended to just modify the\nmain PID constants.\n\nOnly non-zero values of the struct will change the existing motor\nconstants.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param pid\n       The new motor PID constants\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"621:23-621:34|2|2|1","param_spellings":["621:55-621:58"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":39,"usr":5534886659488770554,"detailed_name":"std::int32_t pros::Motor::set_pos_pid_full(const pros::motor_pid_full_s_t pid) const","short_name_offset":26,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"\nSets one of motor_pid_full_s_t for the motor.\n\nOnly non-zero values of the struct will change the existing motor\nconstants.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param pid\n       The new motor PID constants\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"640:23-640:39|2|2|1","param_spellings":["640:65-640:68"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":40,"usr":13449314541913670885,"detailed_name":"std::int32_t pros::Motor::set_vel_pid(const pros::motor_pid_s_t pid) const","short_name_offset":26,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nSets one of motor_pid_s_t for the motor. This intended to just modify the\nmain PID constants.\n\nOnly non-zero values of the struct will change the existing motor\nconstants.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param pid\n       The new motor PID constants\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"660:23-660:34|2|2|1","param_spellings":["660:55-660:58"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":41,"usr":9387515950704455677,"detailed_name":"std::int32_t pros::Motor::set_vel_pid_full(const pros::motor_pid_full_s_t pid) const","short_name_offset":26,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"\nSets one of motor_pid_full_s_t for the motor.\n\nOnly non-zero values of the struct will change the existing motor\nconstants.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param pid\n       The new motor PID constants\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"679:23-679:39|2|2|1","param_spellings":["679:65-679:68"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":42,"usr":3757799319312535671,"detailed_name":"std::int32_t pros::Motor::set_reversed(const bool reverse) const","short_name_offset":26,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\nSets the reverse flag for the motor.\n\nThis will invert its movements and the values returned for its position.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param reverse\n       True reverses the motor, false is default\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"696:23-696:35|2|2|1","param_spellings":["696:47-696:54"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":43,"usr":12315505878660762098,"detailed_name":"std::int32_t pros::Motor::set_voltage_limit(const std::int32_t limit) const","short_name_offset":26,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\nSets the voltage limit for the motor in Volts.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\param limit\n       The new voltage limit in Volts\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"711:23-711:40|2|2|1","param_spellings":["711:60-711:65"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":44,"usr":8028541387718019191,"detailed_name":"pros::motor_brake_mode_e_t pros::Motor::get_brake_mode() const","short_name_offset":40,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\nGets the brake mode that was set for the motor.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return One of motor_brake_mode_e_t, according to what was set for the\nmotor, or E_MOTOR_BRAKE_INVALID if the operation failed, setting errno.","declarations":[{"spell":"723:31-723:45|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":45,"usr":1164591735095330414,"detailed_name":"std::int32_t pros::Motor::get_current_limit() const","short_name_offset":26,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\nGets the current limit for the motor in mA.\n\nThe default value is 2500 mA.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The motor's current limit in mA or PROS_ERR if the operation failed,\nsetting errno.","declarations":[{"spell":"737:23-737:40|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":46,"usr":18301848270027097432,"detailed_name":"pros::motor_encoder_units_e_t pros::Motor::get_encoder_units() const","short_name_offset":43,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\nGets the encoder units that were set for the motor.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return One of motor_encoder_units_e_t according to what is set for the\nmotor or E_MOTOR_ENCODER_INVALID if the operation failed.","declarations":[{"spell":"749:34-749:51|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":47,"usr":10338046491114980034,"detailed_name":"pros::motor_gearset_e_t pros::Motor::get_gearing() const","short_name_offset":37,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nGets the gearset that was set for the motor.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return One of motor_gearset_e_t according to what is set for the motor,\nor E_GEARSET_INVALID if the operation failed.","declarations":[{"spell":"761:28-761:39|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":48,"usr":11747610869436146725,"detailed_name":"pros::motor_pid_full_s_t pros::Motor::get_pos_pid() const","short_name_offset":38,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nGets the position PID that was set for the motor. This function will return\nzero for all of the parameters if the motor_set_pos_pid() or\nmotor_set_pos_pid_full() functions have not been used.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\nAdditionally, in an error state all values of the returned struct are set\nto their negative maximum values.\n\n\\return A motor_pid_full_s_t containing the position PID constants last set\nto the given motor","declarations":[{"spell":"779:29-779:40|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":49,"usr":1241491604728321885,"detailed_name":"pros::motor_pid_full_s_t pros::Motor::get_vel_pid() const","short_name_offset":38,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nGets the velocity PID that was set for the motor. This function will return\nzero for all of the parameters if the motor_set_vel_pid() or\nmotor_set_vel_pid_full() functions have not been used.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\nAdditionally, in an error state all values of the returned struct are set\nto their negative maximum values.\n\n\\return A motor_pid_full_s_t containing the velocity PID constants last set\nto the given motor","declarations":[{"spell":"797:29-797:40|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":50,"usr":6299978296507830190,"detailed_name":"std::int32_t pros::Motor::is_reversed() const","short_name_offset":26,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nGets the operation direction of the motor as set by the user.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return 1 if the motor has been reversed and 0 if the motor was not\nreversed, or PROS_ERR if the operation failed, setting errno.","declarations":[{"spell":"809:23-809:34|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":51,"usr":15664649917090755509,"detailed_name":"std::int32_t pros::Motor::get_voltage_limit() const","short_name_offset":26,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\nGets the voltage limit set by the user.\n\nDefault value is 0V, which means that there is no software limitation\nimposed on the voltage.\n\nThis function uses the following values of errno when an error state is\nreached:\nENODEV - The port cannot be configured as a motor\n\n\\return The motor's voltage limit in V or PROS_ERR if the operation failed,\nsetting errno.","declarations":[{"spell":"824:23-824:40|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":52,"usr":4938490826173791940,"detailed_name":"std::uint8_t pros::Motor::get_port() const","short_name_offset":26,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\nGets the port number of the motor.\n\n\\return The motor's port number.","declarations":[{"spell":"831:23-831:31|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":53,"usr":6955098370261602567,"detailed_name":"const pros::Motor pros::literals::operator\"\"_mtr(const unsigned long long m)","short_name_offset":34,"short_name_size":14,"kind":12,"storage":1,"hover":"","comments":"","declarations":[{"spell":"838:19-838:34|12|2|1","param_spellings":["838:64-838:65"]}],"declaring_type":12,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":54,"usr":3831401347402453172,"detailed_name":"const pros::Motor pros::literals::operator\"\"_rmtr(const unsigned long long m)","short_name_offset":34,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"","declarations":[{"spell":"839:19-839:35|12|2|1","param_spellings":["839:65-839:66"]}],"declaring_type":12,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":6608970628297900131,"detailed_name":"const std::uint8_t pros::Motor::_port","short_name_offset":32,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"834:21-834:26|2|2|2","extent":"834:2-834:26|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":1,"usr":3483622808976096470,"detailed_name":"_PROS_MOTORS_HPP_","short_name_offset":0,"short_name_size":17,"hover":"#define _PROS_MOTORS_HPP_","comments":"","declarations":[],"spell":"20:9-20:26|-1|1|2","extent":"20:9-20:26|-1|1|0","uses":[],"kind":255,"storage":0}]}